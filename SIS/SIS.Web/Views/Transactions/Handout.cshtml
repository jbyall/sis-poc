@model SIS.Web.Models.HandoutViewModel

@{
    ViewBag.Title = "Hand Out";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Handout Transaction</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div class="well well-sm">Item Details</div>
        @Html.HiddenFor(model => model.LocationType)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ItemId, "Item Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, "Item Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemUnit, "Item Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemUnit, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemPrice, "Item Cost", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        
            
            <div class="well well-sm">Locations</div>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Location</th>
                            <th>Qty On Hand</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.ItemLocations.Count; i++)
                        {
                            var location = Model.ItemLocations.ToList()[i];
                            <tr>
                                <td>@Html.DisplayFor(item => item.ItemLocations.ToList()[i].LocationId)</td>
                                <td>@Html.DisplayFor(item => item.ItemLocations.ToList()[i].QuantityOnHand)</td>
                                <td>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Quantity, "Hand Out Qty", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", null,"Select...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        

        @*<div class="form-group">
            @Html.LabelFor(model => model.TransactionValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransactionValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransactionValue, "", new { @class = "text-danger" })
            </div>
        </div>*@

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Hand Out" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "test", "Items")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#ItemId').change(function (event) {
            $.ajax({
                url: "/Items/Transaction",
                type: "GET",
                data: {
                    id: $('#ItemId').val()
                },
                dataType: "JSON"
            }).done(function (response) {
                console.log(response);
                $('#ItemName').val(response.Name);
                $('#ItemUnit').val(response.Unit);
                $('#ItemPrice').val(response.Price);
                getLocations();
            }).fail(function (xhr, status, errorThrown) {
                console.log("Error: " + errorThrown);
                console.log("Status: " + status);
                console.dir(xhr);
            });
        });

        function getLocations()
        {
            $('#LocationId').find('option').remove().end();
            $.ajax({
                url: "/Inventory/Transaction",
                type: "GET",
                data: {
                    id: $('#ItemId').val()
                },
                dataType: "JSON"
            }).done(function (response) {
                console.log(response);
                for (var i = 0; i < response.length; i++) {
                    $('#LocationId').append('<option value=' + response[i] + '>' + response[i] + '</option>');
                }
            }).fail(function (xhr, status, errorThrown) {
                console.log("Error: " + errorThrown);
                console.log("Status: " + status);
                console.dir(xhr);
            });
        }
    </script>
}
