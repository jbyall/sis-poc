@model IEnumerable<SIS.Domain.Transaction>

@{
    ViewBag.Title = "Transactions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Inventory Transactions</h3>
<div class="dx-viewport">
    <div class="alert alert-info">
        <strong>Instructions</strong>
        <ol>
            <li>Click the search icon <span class="glyphicon glyphicon-search"></span> in each column for advanced search options.</li>
            <li>Click the export icon on the right to export data.</li>
        </ol>
    </div>
    <div class="demo-container">
        <div id="gridContainer">

        </div>
        <a id="ajax-indexdata" href="~/Transactions/IndexData"></a>
        <a id="ajax-base" href="~/Transactions"></a>
        
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // Function for loading data in the table
        $(function () {
            //$('#selected-items').hide();
            //var test = $("#gridContainer").find(".dx-command-select");
            //console.log(test);
            var indexData = $('#ajax-indexdata').attr("href");
            var baseUrl = $('#ajax-base').attr("href");
            console.log(baseUrl);
            var items = new DevExpress.data.CustomStore({
                // Configure data loading
                load: function (loadOptions) {
                    console.log(loadOptions);
                    var deferred = $.Deferred(),
                        args = {};

                    if (loadOptions.sort) {
                        args.orderby = loadOptions.sort[0].selector;
                        if (loadOptions.sort[0].desc)
                            args.orderby += " desc";
                    }

                    args.skip = loadOptions.skip || 0;
                    args.take = loadOptions.take || 12;

                    // Ajax call to the controller to get the data
                    $.ajax({
                        url: indexData,
                        type: "GET",
                        //data: args,
                        success: function (result) {
                            console.log(result);
                            deferred.resolve(result, { totalCount: result.length });
                        },
                        error: function (resp) {
                            console.log(resp);
                            deferred.reject("Data Loading Error");
                        },
                        timeout: 5000
                    });

                    return deferred.promise();
                },
                // Configure ajax call to handle deleting transaction
                remove: function (key, values) {
                    var deferred = $.Deferred();

                    $.ajax({
                        url: baseUrl + "/Delete?id=" + key.Id,
                        type: "GET",
                        success: function (result) {
                            console.log(result);
                            deferred.resolve(result);
                        },
                        error: function (resp) {
                            console.log(resp);
                            deferred.reject("Delete transaction error.");
                        },
                        timeout: 5000
                    });
                    return deferred.promise();
                }
            });

            // Main data grid
            $("#gridContainer").dxDataGrid({
                allowColumnResizing: true,
                columnResizingMode: 'nextColumn',
                columnAutoWidth: true,
                selection: {
                    mode: "multiple",
                    allowSelectAll: false,
                    showCheckBoxesMode: "always",
                },
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                dataSource: {
                    store: items
                },
                keyExpr: "Id",
                editing: {
                    mode: "batch",
                    allowDeleting: true,
                },
                export: {
                    enabled: true,
                    fileName: "transactions",
                    allowExportSelectedData: true,
                },
                paging: {
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 50, 100],
                    showNavigationButtons: true,
                    showInfo: true,
                    visible: true
                },
                columns: [
                    {
                        caption: "Date",
                        dataField: "Date",
                        calculateCellValue: function (rowData) {
                            var date = new Date(parseInt(rowData.Date.substr(6)));
                            return date;
                        },
                        dataType: 'datetime',
                        width: 175
                    },
                    { caption: "Dept", width: 85, dataField: "DepartmentId" },
                    { caption: "Item Number", width: 120, dataField: "ItemId" },
                    { caption: "Item Name", width: 250, dataField: "ItemName" },
                    { caption: "Item Price", width: 100, dataField: "ItemPrice", format: { type: "currency", precision: 2 }},
                    { caption: "Location", width: 75, dataField: "LocationId" },
                    { caption: "Qty. Change", width:85, dataField: "QuantityChange" },
                    { caption: "Value", width: 75, dataField: "TransactionValue", format: { type: "currency", precision: 2 }},
                ],

                // Modify toolbar to have the export data text beside the export button
                onToolbarPreparing: function (e) {
                    var toolbarItems = e.toolbarOptions.items;
                    $.each(toolbarItems, function (_, item) {
                        console.log(item);
                        item.showText = "always";
                    });


                    //e.toolbarOptions.items.unshift({
                    //    location: "after",
                    //    template: function () {
                    //        return $('<h5 style="color:#bfbfbf;">Export Data <span class="glyphicon glyphicon-arrow-right"></span></h5>')
                    //    }
                    //});
                }
            }).dxDataGrid("instance");
        });
    </script>


}